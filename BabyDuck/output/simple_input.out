Parse Tree:
program_no_funcs
  program
  simple_input
  ;
  vars
    var
    var_declaration_multiple
      x
      ,
      y
      :
      type_int
      ;
  main
  body_block
    {
    statement_assign
      assign
        x
        =
        expression_simple
          exp_simple
            term_simple
              factor_cte
                int	5
        ;
    statement_assign
      assign
        y
        =
        expression_simple
          exp_compound
            term_simple
              factor_id	x
            +
            term_compound
              factor_cte
                int	2
              *
              factor_id	x
        ;
    }
  end

IR:
Program(id='simple_input', vars=Vars(declarations=(VarDeclaration(type_='int', names=['x', 'y']),)), funcs=[], body=Body(statements=(Assign(id='x', expr=Expression(left_expr=Exp(left_term=Term(left_factor=Factor(value=5, sign='+'), operations=[]), operations=[]), op=None, right_expr=None)), Assign(id='y', expr=Expression(left_expr=Exp(left_term=Term(left_factor=Factor(value='x', sign='+'), operations=[]), operations=[(Token('ADD', '+'), Term(left_factor=Factor(value=2, sign='+'), operations=[(Token('MULT', '*'), Factor(value='x', sign='+'))]))]), op=None, right_expr=None)))))

Symbol Table:
Scope: global
  x: int = 5
  y: int = 15


Quads:
8 1000 1000 None
8 1001 1001 None
8 1000 1000 None
3 7001 7001 5000
1 1000 1000 5001
8 1001 1001 None
--------
Operations.ASSIGN x
Operations.ASSIGN y
Operations.ASSIGN x 5
Operations.MULT 2 x ti0
Operations.PLUS x ti0 ti1
Operations.ASSIGN y ti1

